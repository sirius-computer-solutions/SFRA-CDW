/**
 * MappingMapTocatalog3.java
 *
 * This file was generated by MapForce 2021r2sp1.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import com.altova.text.tablelike.*;
import com.altova.text.*;
import com.altova.text.edi.*;
import java.util.*;

public class MappingMapTocatalog3 extends com.altova.TraceProvider {
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}


	static class main implements IEnumerable {
		com.altova.mapforce.IMFNode var1_acmejson_2_Instance;

		public main(com.altova.mapforce.IMFNode var1_acmejson_2_Instance)	{
			this.var1_acmejson_2_Instance = var1_acmejson_2_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 2;
			Object current;
			main closure;

			public Enumerator(main closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("catalog", "http://www.demandware.com/xml/impex/catalog/2006-10-31"), (new seq1_join(closure.var1_acmejson_2_Instance)));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq1_join implements IEnumerable {
		com.altova.mapforce.IMFNode var1_acmejson_2_Instance;

		public seq1_join(com.altova.mapforce.IMFNode var1_acmejson_2_Instance)	{
			this.var1_acmejson_2_Instance = var1_acmejson_2_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq1_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_object_member_by_name;
			IEnumerator var4_as_array;
			IEnumerator var5_array_items;
			IEnumerator var6_as_object;

			public Enumerator(seq1_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), com.altova.functions.Core.box("http://www.demandware.com/xml/impex/catalog/2006-10-31 file:///C:/Users/admin/Desktop/output%20files/catalog.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_filter = ((new seq2_join(closure.var1_acmejson_2_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_filter.moveNext()) {state = 4; return false; }
				if (!(com.altova.functions.Json.IsA(((com.altova.mapforce.IMFNode)(var2_filter.current())), "file:///C:/Users/admin/Desktop/output%20files/acmejson_2.schema.json#//definitions//products_obj/@64"))) {state = 3; return false; }
				var3_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.mapforce.IMFNode)(var2_filter.current())), "products")).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_object_member_by_name.moveNext()) {state = 6; return false; }
				var4_as_array = (com.altova.functions.Json.AsArray(com.altova.functions.Json.GetMemberValue(((com.altova.mapforce.IMFNode)(var3_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_as_array.moveNext()) {state = 8; return false; }
				var5_array_items = (com.altova.functions.Json.GetArrayItems(((com.altova.mapforce.IMFNode)(var4_as_array.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_as_array != null ) { var4_as_array.close(); var4_as_array = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_array_items.moveNext()) {state = 10; return false; }
				var6_as_object = (com.altova.functions.Json.AsObject(((com.altova.mapforce.IMFNode)(var5_array_items.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_array_items != null ) { var5_array_items.close(); var5_array_items = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_as_object.moveNext()) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("category-assignment", "http://www.demandware.com/xml/impex/catalog/2006-10-31"), (new seq3_join(((com.altova.mapforce.IMFNode)(var6_as_object.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_as_object != null ) { var6_as_object.close(); var6_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var6_as_object != null ) { var6_as_object.close(); var6_as_object = null; }
					if( var5_array_items != null ) { var5_array_items.close(); var5_array_items = null; }
					if( var4_as_array != null ) { var4_as_array.close(); var4_as_array = null; }
					if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
					if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq2_join implements IEnumerable {
		com.altova.mapforce.IMFNode var1_acmejson_2_Instance;

		public seq2_join(com.altova.mapforce.IMFNode var1_acmejson_2_Instance)	{
			this.var1_acmejson_2_Instance = var1_acmejson_2_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq2_join closure;
			IEnumerator var2_as_array;
			IEnumerator var3_array_items;
			IEnumerator var4_as_object;

			public Enumerator(seq2_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_array = (com.altova.functions.Json.AsArray(com.altova.functions.Json.RootValue(closure.var1_acmejson_2_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_array.moveNext()) {state = 3; return false; }
				var3_array_items = (com.altova.functions.Json.GetArrayItems(((com.altova.mapforce.IMFNode)(var2_as_array.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_array != null ) { var2_as_array.close(); var2_as_array = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_array_items.moveNext()) {state = 5; return false; }
				var4_as_object = (com.altova.functions.Json.AsObject(((com.altova.mapforce.IMFNode)(var3_array_items.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_array_items != null ) { var3_array_items.close(); var3_array_items = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_as_object.moveNext()) {state = 7; return false; }
				current = var4_as_object.current();
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
					if( var3_array_items != null ) { var3_array_items.close(); var3_array_items = null; }
					if( var2_as_array != null ) { var2_as_array.close(); var2_as_array = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq3_join implements IEnumerable {
		com.altova.mapforce.IMFNode var1_cur;

		public seq3_join(com.altova.mapforce.IMFNode var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq3_join closure;
			IEnumerator var2_last_items;
			IEnumerator var3_object_member_by_name;
			IEnumerator var4_as_string;

			public Enumerator(seq3_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_last_items = (com.altova.functions.Core.lastItems((new seq4_join(closure.var1_cur)), new java.math.BigInteger("1"))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_last_items.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("category-id", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_last_items.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var2_last_items != null ) { var2_last_items.close(); var2_last_items = null; }
				var3_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "salsify:id")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_object_member_by_name.moveNext()) {state = 6; return false; }
				var4_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.mapforce.IMFNode)(var3_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_as_string.moveNext()) {state = 8; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("product-id", ""), com.altova.functions.Core.box(((java.lang.String)(var4_as_string.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_as_string != null ) { var4_as_string.close(); var4_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_last_items != null ) { var2_last_items.close(); var2_last_items = null; }
					if( var4_as_string != null ) { var4_as_string.close(); var4_as_string = null; }
					if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq4_join implements IEnumerable {
		com.altova.mapforce.IMFNode var1_cur;

		public seq4_join(com.altova.mapforce.IMFNode var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq4_join closure;
			IEnumerator var2_subcategories;
			IEnumerator var3_value;

			public Enumerator(seq4_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_subcategories = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("subcategories", ""), com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("root", ""), (new seq5_map(closure.var1_cur))))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_subcategories.moveNext()) {state = 3; return false; }
				var3_value = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("value", ""), ((com.altova.mapforce.IMFNode)(var2_subcategories.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_subcategories != null ) { var2_subcategories.close(); var2_subcategories = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_value.moveNext()) {state = 5; return false; }
				current = var3_value.current();
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_value != null ) { var3_value.close(); var3_value = null; }
				return false;
			}


			public void close() {
				try {
					if( var3_value != null ) { var3_value.close(); var3_value = null; }
					if( var2_subcategories != null ) { var2_subcategories.close(); var2_subcategories = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq5_map implements IEnumerable {
		com.altova.mapforce.IMFNode var1_cur;

		public seq5_map(com.altova.mapforce.IMFNode var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq5_map closure;
			IEnumerator var2_filter;

			public Enumerator(seq5_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Json.GetObjectMembers(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!(com.altova.functions.Json.IsValueA(((com.altova.mapforce.IMFNode)(var2_filter.current())), "file:///C:/Users/admin/Desktop/output%20files/acmejson_2.schema.json#//definitions//products/!additionalProperties/@127"))) {state = 2; return false; }
				if (!(com.altova.functions.Core.startsWith(com.altova.functions.Json.GetMemberName(((com.altova.mapforce.IMFNode)(var2_filter.current()))), "Acme Tools Salesforce Sub-Category"))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("subcategories", ""), (new seq6_join(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq6_join implements IEnumerable {
		com.altova.mapforce.IMFNode var1_current;

		public seq6_join(com.altova.mapforce.IMFNode var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq6_join closure;
			IEnumerator var2_as_string;

			public Enumerator(seq6_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("name", ""), com.altova.functions.Core.box(com.altova.functions.Json.GetMemberName(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var2_as_string.moveNext()) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("value", ""), com.altova.functions.Core.box(((java.lang.String)(var2_as_string.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_as_string != null ) { var2_as_string.close(); var2_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_string != null ) { var2_as_string.close(); var2_as_string = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class Outer implements IEnumerable {
		com.altova.mapforce.IMFNode var1_acmejson_2_Instance;

		public Outer(com.altova.mapforce.IMFNode var1_acmejson_2_Instance)	{
			this.var1_acmejson_2_Instance = var1_acmejson_2_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_box;

			public Enumerator(Outer closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_box = ((new main(closure.var1_acmejson_2_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_box.moveNext()) {state = 3; return false; }
				current = var2_box.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_box != null ) { var2_box.close(); var2_box = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_box != null ) { var2_box.close(); var2_box = null; }
				} catch (Exception e) {
				}
			}
		}
	}


	// instances
	protected com.altova.json.Document varacmejson_22Instance;

	public void run(String acmejson_22SourceFilename, String catalog4TargetFilename) throws Exception {
		try(
			// open source streams
			com.altova.io.FileInput acmejson_22Source = new com.altova.io.FileInput(acmejson_22SourceFilename);
		// open target stream
			com.altova.io.FileOutput catalog4Target = new com.altova.io.FileOutput(catalog4TargetFilename);

		) {
			// run
			run(acmejson_22Source, catalog4Target);

		}
	}


	// main entry point

	public void run(com.altova.io.Input acmejson_22Source, com.altova.io.Output catalog4Target) throws Exception {
		// Open the source(s)
			varacmejson_22Instance = com.altova.functions.Json.Load(acmejson_22Source, MapForceJsonLibs_acmejson_2.Schemas, false, false);

		// Create the target
		org.w3c.dom.Document catalog4Doc = (catalog4Target.getType() == com.altova.io.Output.IO_DOM) ? catalog4Target.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		main mapping = new main(varacmejson_22Instance);

		com.altova.xml.MFDOMWriter.write(mapping, catalog4Doc);
		// Close the target
		XmlTreeOperations.saveDocument(catalog4Doc, catalog4Target, "UTF-8", false, false, true, false);


		if (runDoesCloseAll) {
			catalog4Target.close();
		}
	}



}
